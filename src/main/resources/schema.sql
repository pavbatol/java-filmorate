--DROP TABLE IF EXISTS films, users, film_likes, friends, film_genres, genres, mpa_ratings;

CREATE TABLE IF NOT EXISTS films (
  film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(70) NOT NULL,
  description varchar(200) NOT NULL,
  release_date date NOT NULL CHECK (release_date >= '1895-12-28'),
  duration BIGINT,
  rating_id BIGINT,
  rate integer DEFAULT 0
);

CREATE TABLE IF NOT EXISTS users (
  user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(50),
  login varchar(20),
  name varchar(20),
  birthday date CHECK (birthday < CURRENT_DATE)
);

CREATE TABLE IF NOT EXISTS film_likes (
  film_id BIGINT,
  user_id BIGINT,
  PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
  user_id BIGINT,
  friend_id BIGINT,
  PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film_genres (
  film_id BIGINT,
  genre_id BIGINT,
  PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS genres (
  genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa_ratings (
  rating_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  rating varchar(10) NOT NULL,
  description varchar(150)
);

CREATE TABLE IF NOT EXISTS directors (
    director_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_directors (
    film_id BIGINT,
    director_id BIGINT,
    PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR NOT NULL,
    is_positive BOOLEAN NOT NULL,
    useful INTEGER NOT NULL,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    film_id BIGINT REFERENCES films (film_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_marks (
    review_id BIGINT REFERENCES reviews (review_id) ON DELETE CASCADE,
    user_id BIGINT REFERENCES users (user_id) ON DELETE CASCADE,
    mark BOOLEAN NOT NULL,
    PRIMARY KEY (review_id, user_id)
);

ALTER TABLE films ADD CONSTRAINT IF NOT EXISTS fk_films_to_rating
    FOREIGN KEY (rating_id) REFERENCES mpa_ratings (rating_id) ON DELETE CASCADE;

ALTER TABLE film_likes ADD CONSTRAINT IF NOT EXISTS fk_film_likes_to_films
    FOREIGN KEY(film_id) REFERENCES films (film_id) ON DELETE CASCADE;
ALTER TABLE film_likes ADD CONSTRAINT IF NOT EXISTS fk_film_likes_to_users
    FOREIGN KEY(user_id) REFERENCES users (user_id) ON DELETE CASCADE;

ALTER TABLE friends ADD CONSTRAINT IF NOT EXISTS fk_friends_user_id_to_users
    FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE;
ALTER TABLE friends ADD CONSTRAINT IF NOT EXISTS fk_friends_friend_id_to_users
    FOREIGN KEY (friend_id) REFERENCES users (user_id) ON DELETE CASCADE;

ALTER TABLE film_genres ADD CONSTRAINT IF NOT EXISTS fk_film_genres_to_films
    FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE;
ALTER TABLE film_genres ADD CONSTRAINT IF NOT EXISTS fk_film_genres_to_genres
    FOREIGN KEY (genre_id) REFERENCES genres (genre_id) ON DELETE CASCADE;

ALTER TABLE film_directors ADD CONSTRAINT IF NOT EXISTS fk_film_directors_to_films
    FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE;
ALTER TABLE film_directors ADD CONSTRAINT IF NOT EXISTS fk_film_directors_to_directors
    FOREIGN KEY (director_id) REFERENCES directors (director_id) ON DELETE CASCADE;






